// <auto-generated />
using System;
using DataEntrySystemDL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataEntrySystemDL.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DataEntrySystemDL.Models.data_rows_eav", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("created_by")
                        .HasColumnType("int");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("row_uuid")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("table_id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("created_at")
                        .HasDatabaseName("idx_created_at");

                    b.HasIndex("created_by");

                    b.HasIndex("table_id", "row_uuid")
                        .HasDatabaseName("idx_table_row");

                    b.ToTable("data_Rows_Eavs");
                });

            modelBuilder.Entity("DataEntrySystemDL.Models.data_rows_json", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("created_by")
                        .HasColumnType("int");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("dynamic_data")
                        .HasColumnType("longtext");

                    b.Property<string>("row_uuid")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("table_id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("created_at")
                        .HasDatabaseName("idx_created_at");

                    b.HasIndex("created_by");

                    b.HasIndex("table_id", "row_uuid")
                        .HasDatabaseName("idx_table_row");

                    b.ToTable("data_Rows_Jsons");
                });

            modelBuilder.Entity("DataEntrySystemDL.Models.data_values_eav", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool?>("ValueBoolean")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("field_id")
                        .HasColumnType("int");

                    b.Property<string>("field_key")
                        .HasColumnType("longtext");

                    b.Property<int?>("row_id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("value_date")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("value_datetime")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("value_number")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("value_text")
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.HasIndex("field_id", "value_date")
                        .HasDatabaseName("idx_field_value_date");

                    b.HasIndex("field_id", "value_number")
                        .HasDatabaseName("idx_field_value_number");

                    b.HasIndex("field_id", "value_text")
                        .HasDatabaseName("idx_field_value_text");

                    b.HasIndex("row_id", "field_id")
                        .IsUnique()
                        .HasDatabaseName("unique_row_field");

                    b.ToTable("data_Values_Eavs");
                });

            modelBuilder.Entity("DataEntrySystemDL.Models.field_permissions", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("can_read")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("can_write")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("field_id")
                        .HasColumnType("int");

                    b.Property<int?>("role_id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("role_id");

                    b.HasIndex("field_id", "role_id")
                        .IsUnique()
                        .HasDatabaseName("unique_field_role");

                    b.ToTable("field_Permissions");
                });

            modelBuilder.Entity("DataEntrySystemDL.Models.FieldDefinition", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("fieldType")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("fieldtype");

                    b.Property<string>("field_key")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("field_name")
                        .HasColumnType("longtext");

                    b.Property<string>("field_options")
                        .HasColumnType("longtext");

                    b.Property<bool>("is_required")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("sort_order")
                        .HasColumnType("int");

                    b.Property<int?>("table_id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("table_id", "field_key")
                        .IsUnique()
                        .HasDatabaseName("unique_field_key");

                    b.ToTable("FieldDefinitions");
                });

            modelBuilder.Entity("DataEntrySystemDL.Models.projects", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<bool>("is_active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<int?>("owner_id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("owner_id");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("DataEntrySystemDL.Models.roles", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("DataEntrySystemDL.Models.row_access_rules", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("access_type")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("access_type");

                    b.Property<DateTimeOffset?>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("filter_conditions")
                        .HasColumnType("longtext");

                    b.Property<int?>("role_id")
                        .HasColumnType("int");

                    b.Property<int?>("table_id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("role_id");

                    b.HasIndex("table_id");

                    b.HasIndex("user_id");

                    b.ToTable("row_Access_Rules");

                    b.HasCheckConstraint("CK_RowAccessRules_UserOrRole", "user_id IS NOT NULL OR role_id IS NOT NULL");
                });

            modelBuilder.Entity("DataEntrySystemDL.Models.tables", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<bool>("is_active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("name")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("project_id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("user_id");

                    b.HasIndex("project_id", "name")
                        .IsUnique()
                        .HasDatabaseName("unique_table_name");

                    b.ToTable("tables");
                });

            modelBuilder.Entity("DataEntrySystemDL.Models.user_roles", b =>
                {
                    b.Property<int?>("user_id")
                        .HasColumnType("int");

                    b.Property<int?>("role_id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("user_id", "role_id");

                    b.HasIndex("role_id");

                    b.ToTable("user_Roles");
                });

            modelBuilder.Entity("DataEntrySystemDL.Models.users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("display_name")
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<bool>("is_active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("password")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("username")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("DataEntrySystemDL.Models.data_rows_eav", b =>
                {
                    b.HasOne("DataEntrySystemDL.Models.users", "users")
                        .WithMany("data_rows_eavs")
                        .HasForeignKey("created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DataEntrySystemDL.Models.tables", "table")
                        .WithMany("data_rows_eavs")
                        .HasForeignKey("table_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("table");

                    b.Navigation("users");
                });

            modelBuilder.Entity("DataEntrySystemDL.Models.data_rows_json", b =>
                {
                    b.HasOne("DataEntrySystemDL.Models.users", "users")
                        .WithMany("data_rows_jsons")
                        .HasForeignKey("created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DataEntrySystemDL.Models.tables", "table")
                        .WithMany("data_rows_jsons")
                        .HasForeignKey("table_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("table");

                    b.Navigation("users");
                });

            modelBuilder.Entity("DataEntrySystemDL.Models.data_values_eav", b =>
                {
                    b.HasOne("DataEntrySystemDL.Models.FieldDefinition", "field_definition")
                        .WithMany("Data_Values_Eavs")
                        .HasForeignKey("field_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DataEntrySystemDL.Models.data_rows_eav", "data_rows_eavs")
                        .WithMany("Data_Values_Eavs")
                        .HasForeignKey("row_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("data_rows_eavs");

                    b.Navigation("field_definition");
                });

            modelBuilder.Entity("DataEntrySystemDL.Models.field_permissions", b =>
                {
                    b.HasOne("DataEntrySystemDL.Models.FieldDefinition", "fieldDefinition")
                        .WithMany("Field_Permissions")
                        .HasForeignKey("field_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DataEntrySystemDL.Models.roles", "role")
                        .WithMany("Field_Permissions")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("fieldDefinition");

                    b.Navigation("role");
                });

            modelBuilder.Entity("DataEntrySystemDL.Models.FieldDefinition", b =>
                {
                    b.HasOne("DataEntrySystemDL.Models.tables", "table")
                        .WithMany("FieldDefinitions")
                        .HasForeignKey("table_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("table");
                });

            modelBuilder.Entity("DataEntrySystemDL.Models.projects", b =>
                {
                    b.HasOne("DataEntrySystemDL.Models.users", "users")
                        .WithMany("Projects")
                        .HasForeignKey("owner_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("users");
                });

            modelBuilder.Entity("DataEntrySystemDL.Models.row_access_rules", b =>
                {
                    b.HasOne("DataEntrySystemDL.Models.roles", "role")
                        .WithMany("row_access_ruless")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DataEntrySystemDL.Models.tables", "table")
                        .WithMany("row_access_ruless")
                        .HasForeignKey("table_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DataEntrySystemDL.Models.users", "users")
                        .WithMany("row_access_ruless")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("role");

                    b.Navigation("table");

                    b.Navigation("users");
                });

            modelBuilder.Entity("DataEntrySystemDL.Models.tables", b =>
                {
                    b.HasOne("DataEntrySystemDL.Models.projects", "project")
                        .WithMany("Tables")
                        .HasForeignKey("project_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DataEntrySystemDL.Models.users", "users")
                        .WithMany("tabless")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("project");

                    b.Navigation("users");
                });

            modelBuilder.Entity("DataEntrySystemDL.Models.user_roles", b =>
                {
                    b.HasOne("DataEntrySystemDL.Models.roles", "role")
                        .WithMany("User_Roles")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataEntrySystemDL.Models.users", "user")
                        .WithMany("User_Roles")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("role");

                    b.Navigation("user");
                });

            modelBuilder.Entity("DataEntrySystemDL.Models.data_rows_eav", b =>
                {
                    b.Navigation("Data_Values_Eavs");
                });

            modelBuilder.Entity("DataEntrySystemDL.Models.FieldDefinition", b =>
                {
                    b.Navigation("Data_Values_Eavs");

                    b.Navigation("Field_Permissions");
                });

            modelBuilder.Entity("DataEntrySystemDL.Models.projects", b =>
                {
                    b.Navigation("Tables");
                });

            modelBuilder.Entity("DataEntrySystemDL.Models.roles", b =>
                {
                    b.Navigation("Field_Permissions");

                    b.Navigation("User_Roles");

                    b.Navigation("row_access_ruless");
                });

            modelBuilder.Entity("DataEntrySystemDL.Models.tables", b =>
                {
                    b.Navigation("FieldDefinitions");

                    b.Navigation("data_rows_eavs");

                    b.Navigation("data_rows_jsons");

                    b.Navigation("row_access_ruless");
                });

            modelBuilder.Entity("DataEntrySystemDL.Models.users", b =>
                {
                    b.Navigation("Projects");

                    b.Navigation("User_Roles");

                    b.Navigation("data_rows_eavs");

                    b.Navigation("data_rows_jsons");

                    b.Navigation("row_access_ruless");

                    b.Navigation("tabless");
                });
#pragma warning restore 612, 618
        }
    }
}
